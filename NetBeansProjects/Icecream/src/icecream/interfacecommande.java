/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package icecream;

import icecream.*;
import java.awt.*;
import javax.swing.*;
import java.sql.*;
import java.util.Vector;
import java.lang.*;
import java.math.*;
import java.text.*;
import java.util.*;

public class interfacecommande extends javax.swing.JFrame {
    
    interfaceemployer menu;
    
    Connection conn = null;
    ResultSet rs,rs1,rs2,rs3,rs4,rs5,rs6,rs7= null;
    PreparedStatement pst,pst1,pst2,pst3,pst4,pst5,pst6,pst7= null;
    
    Object a,b,c,id;
   
    float prixht;
    float prixsupp;
    float tva;
    int spin;
    
    float calcul;
    
    float pTTC;
    float to=0;
    float prixFinal;
    
    String s;
    String rendu;
    
    
    /**
     * Constructeur
     * @param menu 
     */
    
    public interfacecommande(interfaceemployer menu) {
       
        initComponents();
        conn=Icecream.connecterDB();
        this.setLocationRelativeTo(null);
        
        //--Liaison interface employer
        this.menu=menu;

        //Fonctions 
        glaces();
        quantitee();
        prix();
        suplement();
        prixSupp();
        tva();
        
        
        //Réglage du spinner taille min max infinie
        
        JSpinner.NumberEditor spinnerEditor = new JSpinner.NumberEditor(jSpinner1);
        jSpinner1.setEditor(spinnerEditor);
        spinnerEditor.getModel().setMinimum(0);
       
        //--Calcul du prix--
        Calculprix();
      
        //--Item de la combobox --
        Object car="Carte Bancaire",che="Chèque",esp="Espèce";
        mode_paiement.addItem(car);
        mode_paiement.addItem(che);
        mode_paiement.addItem(esp);
        
        // Définir les listes a vide 
        Object vide="";
        ComboGlace.addItem(vide);
        ComboGlace.setSelectedIndex(7);
        ComboQuantitee.addItem(vide);
        ComboQuantitee.setSelectedIndex(4);
        
        Monnaie_rendu.setText("0");
        Ajouter.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ComboGlace = new javax.swing.JComboBox();
        ComboQuantitee = new javax.swing.JComboBox();
        prix_HT = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ComboSup = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        prix_supp = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        prixTTC = new javax.swing.JLabel();
        Retour = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        Ajouter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Recapitulatif = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        prix_total_TTC = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        save_commande = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel20 = new javax.swing.JLabel();
        mode_paiement = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        PTTC = new javax.swing.JLabel();
        prix = new javax.swing.JLabel();
        Monnaie_rendu = new javax.swing.JLabel();
        Rendu = new javax.swing.JButton();
        Espèce = new javax.swing.JLabel();
        espece = new javax.swing.JTextField();
        txt_rendu = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setText("Nombre de boules souhaité");

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Quantite de la commande");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel7.setText("Prix HT de la Glace :");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel11.setText("Glaces :");

        ComboGlace.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboGlaceItemStateChanged(evt);
            }
        });

        ComboQuantitee.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboQuantiteeItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel8.setText("Suplement :");

        ComboSup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun" }));
        ComboSup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboSupItemStateChanged(evt);
            }
        });
        ComboSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboSupActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel9.setText("Prix supplement :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel10.setText("Prix Total TTC:");

        Retour.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        Retour.setText("Retour");
        Retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetourActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        Ajouter.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        Ajouter.setText("Ajouter");
        Ajouter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AjouterItemStateChanged(evt);
            }
        });
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });

        Recapitulatif.setEditable(false);
        Recapitulatif.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        Recapitulatif.setTabSize(100);
        Recapitulatif.setEnabled(false);
        Recapitulatif.setPreferredSize(new java.awt.Dimension(19, 19));
        Recapitulatif.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(Recapitulatif);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel12.setText("Récapitulatif de la commande :");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel13.setText("Prix total de la commande :");

        prix_total_TTC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        reset.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        reset.setText("Recommencer");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("TVA: 5 %  ");

        save_commande.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        save_commande.setText("Enregistrer la commande");
        save_commande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_commandeActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel20.setText("Mode de paiement :");

        mode_paiement.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mode_paiementItemStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        prix.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        prix.setText("Prix :");

        Monnaie_rendu.setPreferredSize(new java.awt.Dimension(6, 20));

        Rendu.setText("Rendre");
        Rendu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenduActionPerformed(evt);
            }
        });

        Espèce.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        Espèce.setText("Espèce :");

        txt_rendu.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txt_rendu.setText("Rendu :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(txt_rendu)
                        .addGap(18, 18, 18)
                        .addComponent(Monnaie_rendu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Espèce)
                                .addGap(18, 18, 18)
                                .addComponent(espece, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(prix)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Rendu)
                                    .addComponent(PTTC, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Espèce)
                    .addComponent(espece, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prix)
                    .addComponent(PTTC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Rendu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_rendu)
                    .addComponent(Monnaie_rendu, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(prix_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(prix_HT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ComboQuantitee, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(158, 158, 158)
                                        .addComponent(prixTTC, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ComboSup, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboGlace, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)))
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(mode_paiement, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(prix_total_TTC, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Retour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save_commande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(178, 178, 178))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prix_total_TTC, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(44, 44, 44)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mode_paiement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(save_commande)
                        .addGap(18, 18, 18)
                        .addComponent(Retour)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(ComboGlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(ComboSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(ComboQuantitee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prix_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(prix_HT, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addComponent(jLabel10))
                            .addComponent(prixTTC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(Ajouter)
                        .addGap(55, 55, 55)
                        .addComponent(reset)
                        .addGap(22, 22, 22))))
            .addComponent(jSeparator4)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//------------------------------------------------------
    
    /**
     * La glace selectionné avec calcul de son prix
     * @param evt 
     */
    private void ComboGlaceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboGlaceItemStateChanged

        a=ComboGlace.getSelectedItem();    
        prix();
        Calculprix();
        if(ComboGlace.getSelectedIndex()==7){
            Ajouter.setEnabled(false);
            prixTTC.setText("0");
            prix_supp.setText("0");
        }
        if(ComboGlace.getSelectedIndex()!=7){
            Ajouter.setEnabled(true);
        }
    }//GEN-LAST:event_ComboGlaceItemStateChanged
//------------------------------------------------------
    
    /**
     *Liste du nombre de boule souhaiter et  calcul du  prix en fonction du nombres
     * @param evt 
     */
    private void ComboQuantiteeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboQuantiteeItemStateChanged
       
       b=ComboQuantitee.getSelectedItem();
       if(ComboQuantitee.getSelectedIndex()==4){
            prix_supp.setText("0");
            prixTTC.setText("0");
            prixht=0;
       }
       if(ComboGlace.getSelectedIndex()==7 && ComboQuantitee.getSelectedIndex()>0){
            spin=0;
            prix_supp.setText("0");
            prixTTC.setText("0"); 
            prixht=0;
            
       }
       prix();
       Calculprix();   
    }//GEN-LAST:event_ComboQuantiteeItemStateChanged
//------------------------------------------------------
    
    /**
     * Spinner : Quantité de la commande voulu
     * @param evt 
     */
    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        
        //System.out.println(jSpinner1.getValue());
        prix();
        spin=(Integer)jSpinner1.getValue();
        if(spin==0){
            prix_supp.setText("0");
            prixTTC.setText("0");
            prixht=0;
       }
        prixht=prixht*spin;
        prix_HT.setText(""+prixht);
        Calculprix();
        
    }//GEN-LAST:event_jSpinner1StateChanged
//------------------------------------------------------
    
    /**
     * Liste des supplement avec affichage de son prix
     * @param evt 
     */
    private void ComboSupItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboSupItemStateChanged
        
        c=ComboSup.getSelectedItem();
        if(ComboSup.getSelectedIndex()==0){
            prix_supp.setText(""+0);
            
        }
        prixSupp();
        prix_supp.setText(""+prixsupp);
        Calculprix();
    }//GEN-LAST:event_ComboSupItemStateChanged
//------------------------------------------------------
    
    /**
    * Si le premiere item = 0 alors tout est égale à 0
    */
    private void ComboSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboSupActionPerformed
        
        if(ComboSup.getSelectedIndex()==0){
            prix_supp.setText("0");
            prixsupp=0;
        }
        Calculprix();
    }//GEN-LAST:event_ComboSupActionPerformed
//------------------------------------------------------
    
    /**
     * Bouttonn retour menu principale
     * @param evt 
     */
    
    private void RetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetourActionPerformed
        
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_RetourActionPerformed

//------------------------------------------------------
    
    /**
     * Boutton ajouter : ajoute une commande  au récapitulatif de la commande
     * @param evt 
     */
    
    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
        
        Recapitulatif.append("Numéro de la glace :"+a+" "+"Nombre(s) de boules souhaité :"+b+" "+"Supplements:"+c+" "+"Prix HT :"+prix_HT.getText()+"\n");       
                 
        pTTC=Float.parseFloat(prixTTC.getText()); 
        prix_total_TTC.setText(""+pTTC);   
        to=to+pTTC;  
                      
        prix_total_TTC.setText(""+to);
        PTTC.setText(""+to);
               
    }//GEN-LAST:event_AjouterActionPerformed


//------------------------------------------------------
    
/*
    private void AjouterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AjouterItemStateChanged

    }//GEN-LAST:event_AjouterItemStateChanged
*/
    
//------------------------------------------------------    
    
    /**
     * Boutton rénitialisation de tout les parametres 
     * @param evt 
     */
    
    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
         prixTTC.setText("");
         prix_HT.setText("");
         pTTC=0;
         to=0;
         s="";
         prix_total_TTC.setText("");
         prix_supp.setText("");
         jSpinner1.setValue(0);
         ComboSup.setSelectedIndex(0);
         Recapitulatif.setText("");
         
    }//GEN-LAST:event_resetActionPerformed
//------------------------------------------------------
    /**
     * sauvegarde de la commande
     */

    private void save_commandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_commandeActionPerformed
        
        try{
            //requete 
            String sql="INSERT INTO `commande`(`id_com`, `Date_C`, `prix_TTC`, `id_pdv`, `id_emp`, `mode_paiement`) VALUES (null,NOW(),'"+prix_total_TTC.getText()+"','"+menu.id.getText()+"','"+menu.id_emp.getText()+"','"+mode_paiement.getSelectedItem()+"')";
            
            //Initialisation du traitement et exécution de la requete
            pst=conn.prepareStatement(sql);
            pst.execute();
            jLabel6.setText("La commande a bien été enregistrée");
        }
        
        catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
        } 
        
    }//GEN-LAST:event_save_commandeActionPerformed

    
//------------------------------------------------------
    /**
     * Calcul de la monnaie a rendre
     * @param evt 
     */
    private void RenduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenduActionPerformed
        Float es=Float.parseFloat(espece.getText());
        Float r=es-to; 

        if (to>=es){
            Monnaie_rendu.setText("Impossible");

        }
        if (to<es){
            NumberFormat n = NumberFormat.getCurrencyInstance(Locale.FRANCE);
            rendu = n.format(r);
            Monnaie_rendu.setText(""+rendu);  
        }
        
    }//GEN-LAST:event_RenduActionPerformed

//------------------------------------------------------
    
    /**
     * combobox pour le mode de paiment cheque carte espece si le choix
     * = espece affichage du calcul de l'espece rendu
     * @param evt 
     */
    
    private void mode_paiementItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mode_paiementItemStateChanged
          
            jPanel1.setVisible(false);
   
            if(mode_paiement.getSelectedIndex()==2){
                jPanel1.setVisible(true);
            }
    }//GEN-LAST:event_mode_paiementItemStateChanged


//  ------------------------------------------------------ 
/**
 * fonction pour récuperer les glaces sans suplement
 */    
    
    private void glaces (){
        try{
            //requete renvoyant la recette du jours
            String sql="SELECT * FROM Marchandise WHERE id_gla <8";
            //Initialisation du traitement et exécution de la requete
            pst1=conn.prepareStatement(sql);
            rs1=pst1.executeQuery();
           
            while(rs1.next()){
                ComboGlace.addItem(rs1.getString("id_gla")+"  "+rs1.getString("Nom")+"  "+rs1.getString("Categorie"));
            }

        }
        
        catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
        }        
    }
    
//------------------------------------------------------
    
/**
 * Nombre de boules souhaité
 */
   
    private void quantitee(){
        try{
            //requete renvoyant la recette du jours
            String sql="SELECT * FROM Quantitee WHERE Quantitee > 0";
            //Initialisation du traitement et exécution de la requete
            pst2=conn.prepareStatement(sql);
            rs2=pst2.executeQuery();
           
            while(rs2.next()){
                ComboQuantitee.addItem(rs2.getString("Quantitee"));
               
            }
             
        }
        
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }

//------------------------------------------------------
 
/**
 * prix HT des glaces
 */
    
    private void prix(){
         
        try{
            //requete renvoyant la recette du jours
            
            String sql="SELECT * FROM `prix` WHERE `id_gla` ='"+a+"' AND `quantitee` ='"+b+"'";
           
            //Initialisation du traitement et exécution de la requete
            pst3=conn.prepareStatement(sql);
            rs3=pst3.executeQuery();
            
            if(rs3.next()){
                prixht=Float.parseFloat(rs3.getString("prix_HT"));
            }
            
        }
        
        catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
        }
    }
    
//------------------------------------------------------
    
    /**
    * Supplement
    */
    
    private void suplement(){
        try{
            //requete renvoyant la recette du jours
            String sql="SELECT * FROM Marchandise WHERE id_gla >7";
            //Initialisation du traitement et exécution de la requete
            pst4=conn.prepareStatement(sql);
            rs4=pst4.executeQuery();
           
            while(rs4.next()){
                ComboSup.addItem(rs4.getString("id_gla")+" "+rs4.getString("Nom"));
            }

        }
        
        catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
        }            
    }
    
//------------------------------------------------------
    
    /**
     * Prix du supplément
     */
    
    private void prixSupp(){
        try{
            //requete renvoyant la recette du jours
            
            String sql="SELECT * FROM `prix` WHERE `id_gla` ='"+c+"'";
           
            //Initialisation du traitement et exécution de la requete
            pst5=conn.prepareStatement(sql);
            rs5=pst5.executeQuery();
            
            if(rs5.next()){
                prixsupp=Float.parseFloat(rs5.getString("prix_HT"));
            }
            
        }
        
        catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
        }        
    }
    
//------------------------------------------------------
    
    /**
     * Prix comprenant TVA et supplément
     */
    
    private void Calculprix(){
        DecimalFormat df = new DecimalFormat ("0.##") ;
        df.setMaximumFractionDigits (2) ;
        df.format (calcul);
        
        
        calcul=prixht*(tva/100)+prixht+prixsupp; 
        prixTTC.setText(""+calcul);
        if(ComboSup.getSelectedIndex()==0){
            calcul=prixht*(tva/100)+prixht;          
            prixTTC.setText(""+calcul);
        }

    }
    
//------------------------------------------------------    
    
    /**
     * TVA
     */
    
    private void tva(){
        try{
            //requete renvoyant la recette du jours
            
            String sql="SELECT tva FROM `tva` ";
           
            //Initialisation du traitement et exécution de la requete
            pst6=conn.prepareStatement(sql);
            rs6=pst6.executeQuery();
            
            if(rs6.next()){
                tva=Float.parseFloat(rs6.getString("tva"));
            }
            
        }
        
        catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
        }  
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton Ajouter;
    public javax.swing.JComboBox ComboGlace;
    public javax.swing.JComboBox ComboQuantitee;
    private javax.swing.JComboBox ComboSup;
    private javax.swing.JLabel Espèce;
    public javax.swing.JLabel Monnaie_rendu;
    public javax.swing.JLabel PTTC;
    public javax.swing.JTextArea Recapitulatif;
    public javax.swing.JButton Rendu;
    private javax.swing.JButton Retour;
    public javax.swing.JTextField espece;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    public javax.swing.JSpinner jSpinner1;
    public javax.swing.JComboBox mode_paiement;
    private javax.swing.JLabel prix;
    public javax.swing.JLabel prixTTC;
    public javax.swing.JLabel prix_HT;
    public javax.swing.JLabel prix_supp;
    public javax.swing.JLabel prix_total_TTC;
    private javax.swing.JButton reset;
    public javax.swing.JButton save_commande;
    private javax.swing.JLabel txt_rendu;
    // End of variables declaration//GEN-END:variables
}
